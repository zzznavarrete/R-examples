colSums(final_matrix)
#¡ATENCIÓN! Se recomienda hacer el curso de algebra lineal
#Vectores numéricos
tiempo_platzi <- c (25,5, 10, 15,10)
tiempo_lecturas <- c(30,10,5,10,15)
#Suma de vectores
tiempo_aprendizaje <- tiempo_platzi + tiempo_lecturas
tiempo_aprendizaje
#Vector con carácteres, la c es por 'Contenedor'
dias_aprendizaje <- c("Lunes", "Martes", "Miércoles", "Jueves", "Viernes")
dias_aprendizaje
#Vector booleano
dias_mas_20min <- c(TRUE, FALSE, FALSE, TRUE, TRUE)
dias_mas_20min
#Tiempo total para el estudio en platzi
total_tiempo_platzi <- sum(tiempo_platzi)
total_tiempo_platzi
total_tiempo_lecturas <- sum(tiempo_lecturas)
total_tiempo_lecturas
total_tiempo_adicional <- total_tiempo_platzi + total_tiempo_lecturas
total_tiempo_adicional
#MATRICES
tiempo_matrix <- matrix(c(tiempo_platzi, tiempo_lecturas), nrow = 2, byrow = TRUE)
dias <- c("Lunes", "Martes", "Miércoles", "Jueves", "Viernes")
tiempo <- c("tiempo platzi", "tiempo lecturas")
#Asignandole las columnas a la matriz
colnames(tiempo_matrix) <- dias
#Asignandole las filas a la matriz
rownames(tiempo_matrix) <- tiempo
#Matriz sin agrupar
tiempo_matrix
#Matriz agrupada
colSums(tiempo_matrix)
#Agregando una nueva fila a la matriz
final_matrix <- rbind(tiempo_matrix, c(10,15,30,5,0))
final_matrix
#final_matrix <- cbind(final_matrix, c("Sábado"))
#Tiempo dedicado por dia
colSums(final_matrix)
#Agregando una columna a la matriz
# fila 1, columna 5.
final_matrix[1,5]
#RETO: Agregar una columna nueva, sábado
final_matrix
dias_sabado <- c(dias, "Sábado")
colnames(tiempo_matrix) <- dias_sabado
colnames(tiempo_matrix) <- dias_sabado
colnames(final_matrix) <- dias_sabado
final_matrix <- cbind(final_matrix, c(20,10,30))
colnames(final_matrix) <- dias_sabado
final_matrix
tiempo_extendido <- c(tiempo, "tiempo podcast")
rownames(final_matrix) <- tiempo_extendido
final_matrix)
final_matrix)
final_matrix
mtcars <- read.csv("~/Documents/R/datasets/mtcars-master/mtcars.csv")
View(mtcars)
mtcars[mtcars$cyl <6, ]
cars[mtcars$cyl <6 ]
mtcars[mtcars$cyl <6, ]
orangeec[orangeec$`GDP PC`>=15000,]
orangeec[orangeec$`GDP PC`>=15000,]
orangeec[orangeec$`GDP PC`>=15000,]
orangeec[orangeec$`GDP PC`<=15000,]
orangeec[orangeec$`GDP PC`>=15000,]
orangeec[orangeec$`Creat Ind % GDP`<=2]
orangeec[orangeec$`Creat Ind % GDP`<=2,]
neworange <- subset(orangeec, Internet.penetration...population >80. )
neworange <- subset(orangeec, Internet.penetration...population > 80, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80, orangeec$`Education invest % GDP` > 4.5 )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80,
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange
mtcars[mtcars$cyl <6, ]
mtcars[mtcars$cyl <6, ]
mtcars[mtcars$cyl <=6, ]
orangeec[orangeec$`Creat Ind % GDP`<=2,]
orangeec[orangeec$`GDP PC`>=15000,]
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` > 4.5, )
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` >= 4.5, )
orangeec[orangeec$`Creat Ind % GDP`<=2,]
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 &
orangeec$`Education invest % GDP` >= 4.5, )
install.packages("plyr")
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 80 )
neworangeec <- subset(orangeec, 'Internet penetration % population' > 80 & 'Education invest % GDP' >= 4.5, select = 'Create Ind % GDP')
neworangeec <- subset(orangeec, 'Internet penetration % population' > 80 & 'Education invest % GDP' >= 4.5, select = 'Create Ind % GDP')
neworangeec <- subset(orangeec, 'Internet penetration % population' > 80 , select = 'Create Ind % GDP')
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 80 )
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 )
neworange
#Penetración de internet mayor al 80% e Inversión en educación mayor o igual a 4.5 del PIB
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5 )
neworange
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5, select = orangeec$`Creat Ind % GDP`)
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = orangeec$`Creat Ind % GDP`)
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = orangeec$`Creat Ind % GDP`,)
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = `Creat Ind % GDP`)
neworange
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = `Creat Ind % GDP`)
neworange
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = neworangeec$`Creat Ind % GDP`)
neworange
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = neworangeec$`Creat Ind % GDP`)
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = `Creat Ind % GDP`)
neworange <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5 )
neworange
neworangeec <- subset(orangeec, orangeec$`Internet penetration % population` > 10 & orangeec$`Education invest % GDP` >= 4.5,
select = `Creat Ind % GDP`)
neworangeec
rename(orangeec, c(orangeec$`Creat Ind % GDP`= `AporteEcNja`)
rename(orangeec, c(orangeec$`Creat Ind % GDP`= "AporteEcNja")
rename(orangeec, c(`Creat Ind % GDP`= "AporteEcNja")
orangeec
orangeec
rename(orangeec, c(`Creat Ind % GDP`= "AporteEcNja")
orangeec
rename(orangeec, c(`Creat Ind % GDP`= `AporteEcNja`)
orangeec
rename(orangeec, c("Creat Ind % GDP" = "AporteEcNja")
orangeec
library(plyr)
rename(orangeec, c("Creat Ind % GDP" = "AporteEcNja")
rename(orangeec, c("Creat Ind % GDP" = "AporteEcNja")
orangeec
rename(orangeec, c(`Creat Ind % GDP` = `AporteEcNja`)
orangeec
rename(orangeec, c(`Creat Ind % GDP` = `AporteEcNja`))
rename(orangeec, c(`Creat Ind % GDP` = "AporteEcNja"))
orangeec
rename(orangeec, c("Creat Ind % GDP" = "AporteEcNja"))
orangeec
rename(orangeec, c("Country" = "Pais"))
orangeec
rename(orangeec, c(orangeec$Country = "Pais"))
orangeec
rename(orangeec, c(orangeec$Country = "Pais"))
rename(orangeec, c(orangeec$Country = `Pais`))
rename(orangeec, c(`Country` = `Pais`))
rename(orangeec, c(`Country` = `Pais`), warn_missing = TRUE, warn_duplicated = TRUE)
rename(orangeec, c(Country="Pais"), warn_missing = TRUE, warn_duplicated = TRUE)
rename(orangeec, c(Country="Pais"))
#Ejercicio
Nivel_Curso <- c("Básico", "Intermerdio", "Avanzado")
Nivel_Curso
head(mtcars)
tail(mtcars)
install.packages("dplyr")
library(dplyr)
glimpse(orangeec)
#Haciendo un vector
my_vector <- 1:8 #signfica que será del 1 al 8
my_matrix <- matrix(1:9, ncol=3)
my_dataFrame <- mtcars[1:4,]
my_vector; my_matrix; my_dataFrame
my_list <- list(my_vector, my_matrix, my_dataFrame)
my_list
plot(mtcars$mpg ~ mtcars$cyl,
xlab = 'Cilindros', ylab = 'Millas por galón', main="Relación cilindros y millas por galón")
plot(mtcars$mpg ~ mtcars$hp,
xlab = 'Caballos de fuerza', ylab = 'Millas por galón', main="Relación caballos de y millas por galón")
plot(mtcars$mpg ~ mtcars$hp,
xlab = 'Caballos de fuerza', ylab = 'Millas por galón', main="Relación caballos de fuerza y millas por galón")
plot(orangeec$Unemployment ~ orangeec$`Education invest % GDP`, xlab = "Inversión Educación (%PIB)", ylab = "Desempleo",
main="Relación inversión en educación y desempleo")
plot(orangeec$`GDP PC` ~ orangeec$`Creat Ind % GDP`,
xlab = "Aporte economia naranja al PIB", ylab = "PIB per cápita",
main="Relación economía naranja y pib per cápita")
install.packages("ggplot2")
library(ggplot2)
qplot(mtcars$hp,
geom = "histogram",
xlab = "Caballos de fuerza",
main="Carros segn caballos de fuerza")
qplot(mtcars$hp,
geom = "histogram",
xlab = "Caballos de fuerza",
main="Carros segn caballos de fuerza")
ggplot(mtcars, aes(x=hp)) + geom_histogram() +
labs(X="Caballos de fuerza", Y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados")
ggplot(mtcars, aes(x=hp)) + geom_histogram() +
labs(x="Caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados") +
theme(legend.position = "none") + theme(panel.background = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(mtcars, aes(x=hp)) + geom_histogram(binwidth = 30) +
labs(x="Caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados") +
theme(legend.position = "none") + theme(panel.background = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(mtcars, aes(x=hp)) + geom_histogram(binwidth = 10) +
labs(x="Caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados") +
theme(legend.position = "none") + theme(panel.background = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=mtcars,
aes(x=hp), fill="blue", color="red",
binwidth = 20)+
labs(x="Caballos de fuerza", y="Cantidad de carros",
title="Caballos de fuerza en carros seleccionados") +
xlim(c(90,280))+
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=orangeec,
aes(x=hp), fill="blue", color="red",
binwidth = 2000)+
labs(x="Pib per capita", y="Cantidad de paises",
title="PIB per cápita en paises latam") +
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=orangeec,
aes(x=GDP.PC), fill="blue", color="red",
binwidth = 2000)+
labs(x="Pib per capita", y="Cantidad de paises",
title="PIB per cápita en paises latam") +
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=orangeec,
aes(x=orangeec$`GDP PC`), fill="blue", color="red",
binwidth = 2000)+
labs(x="Pib per capita", y="Cantidad de paises",
title="PIB per cápita en paises latam") +
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=orangeec,
aes(x=orangeec$`Creat Ind % GDP`), fill="blue", color="red",
binwidth = 1)+
labs(x="Aporte economía naranja al PIB(%)", y="Cantidad de paises",
title="Contribucion economica economia naranja al PIB") +
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot() + geom_histogram(data=orangeec,
aes(x=orangeec$`Internet penetration % population`), fill="red", color="yellow",
binwidth = 5)+
labs(x="Penetración internet (%) población", y="Cantidad de paises",
title="Penetración de internet en países latam") +
theme(legend.position = "none")+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
boxplot(mtcars$hp,
ylab="Caballos de fuerza",
main="Caballos de fuerza en carros mtcars")
ggplot(mtcars, aes(x=cyl, y=hp, fill=cyl))+ geom_boxplot() +
labs(x="Cilindros", y="Caballos de fuerza", title = "Caballos de fuerza según cilindros en mtcars")
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+ geom_boxplot() +
labs(x="Cilindros", y="Caballos de fuerza", title = "Caballos de fuerza según cilindros en mtcars")
boxplot(mtcars$hp,
ylab="Caballos de fuerza",
main="Caballos de fuerza en carros mtcars")
ggplot(mtcars, aes(x=am, y=mpg, fill=am))+ geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón",
title="Millas por galón según tipo de caja mtcars")
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot()
+ labs(x="Tipo de caja", y="Millas por galón",
title="Millas por galón según tipo de caja mtcars")
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot()
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot() +   labs(x="Cilindros", y="Caballos de fuerza", title = "Caballos de fuerza según cilindros en mtcars")
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
?mtcars
#cambiando tipo de caja de booleano a algo logico
mtcars$am <- factor(mtcars$am, levels = c(TRUE, FALSE), labels= c("Manual", "Automatico"))
#Millas por galón según tipo de caja
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
#Millas por galón según tipo de caja
ggplot(mtcars, aes(x=am, y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
ggplot(mtcars, aes(x=as.factor( am), y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
#Millas por galón según tipo de caja
ggplot(mtcars, aes(x=am, y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, fill=cyl))+ geom_boxplot() +
labs(x="Cilindros", y="Caballos de fuerza", title = "Caballos de fuerza según cilindros en mtcars")
ggplot(mtcars, aes(x=am, y=mpg, fill=am))+
geom_boxplot() + labs(x="Tipo de caja", y="Millas por galón", title = "Millas por galón según tipo de caja")
ggplot(mtcars, aes(x=am, y=mpg, fill=am))+
geom_boxplot()
mtcars$am <- factor(mtcars$am, levels = c(TRUE, FALSE), labels= c("Manual", "Automatico"))
head(mtcars)
economy <- mean(orangeec$`GDP PC`)
economy
orangeec <- orangeec %>%
mutate(strong_economy = ifelse(`GDP PC` < economy, "Por debajo del promedio PIB per cápita",
"Sobre promedio PIB per cápita"))
ggplot(orangeec, aes(x=strong_economy, y=`Creat Ind % GDP`,
fill=strong_economy))+
geom_boxplot(alpha=0.4)+
labs(x="Tipo de país", y="Aporte economia naranja al pib",
title="Aporte economía naranja al pib per capita por tipo de país")
ggplot(orangeec, aes(x=strong_economy, y=`Internet penetration % population`,
fill=strong_economy))+
geom_boxplot(alpha=0.4)+
labs(x="Tipo de país", y="Penetración de internet (%)",
title="Penetración de internet en latam con alto y bajo pib per capita")
ggplot(mtcars, aes(hp, mpg))+
geom_point()+
labs(x="Caballos de fuerza", y="Millas por galón", title = "Relación caballos de fuerza y millas por galón")
ggplot(mtcars, aes(wt, hp))+
geom_point()+
labs(x="Peso", y="Potencia", title = "Relación peso-potencia")
#Relación peso-potencia
ggplot(mtcars, aes(hp, qsec))+
geom_point(aes(color=wt, size=cyl))+
labs(x="Caballos de fuerza", y="Tiempo en 1/4 de milla", title = "Caballos-velocidad según cilindraje y peso")
ggplot(orangeec, aes(`Internet penetration % population`, `Creat Ind % GDP`))+
geom_point(aes(color=factor(strong_economy), size=`GDP Growth %`))+
labs(x="Penetración internet", y="Aporte economía naranja al PIB",
title = "Internet y aporte economía naranja según economía y crecimiento PIB")
install.packages("plotly")
library(plotly)
my_graph <- ggplot(orangeec, aes(`Internet penetration % population`, `Creat Ind % GDP`, label=row.names(orangeec)))+
geom_point()+
labels(x="Penetración de internet", y="Aporte economía naranja", title="Internet y aporte economía naranja")
my_graph <- ggplot(orangeec, aes(`Internet penetration % population`, `Creat Ind % GDP`, label=row.names(orangeec)))+
geom_point()+
labels(x="Penetración de internet", y="Aporte economía naranja", title="Internet y aporte economía naranja")
my_graph <- ggplot(orangeec, aes(`Internet penetration % population`, `Creat Ind % GDP`, label=row.names(orangeec) ) ) +
geom_point()+
labels(x="Penetración de internet", y="Aporte economía naranja", title="Internet y aporte economía naranja")
my_graph <- ggplot(orangeec, aes(`Internet penetration % population`, `Creat Ind % GDP`, label=row.names(orangeec) ) ) +
geom_point()
my_graph
eficientes <- filter(mtcars, mpg >= 30)
eficientes
eficientes <- filter(mtcars, mpg >= 30)
eficientes
eficientes <- filter(mtcars, mpg >= 30)
eficientes
eficientes <- filter(mtcars, mpg >= 30)
eficientes
#Forma 4 - Millas por galón mayor o igual a 30
eficientes <- filter(mtcars, mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=38)
eficientes <- filter(mtcars, mtcars$mpg >=38)
eficientes
library(dplyr)
eficientes <- filter(mtcars, mtcars$mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=38)
eficientes
eficientes <- filter(mtcars, mpg >=40)
eficientes
tail(mtcars)
eficientes <- filter(mtcars, mpg <=38)
eficientes
eficientes <- filter(mtcars, mpg <=30)
eficientes
eficientes <- filter(mtcars, mpg >=30)
eficientes
pairs(Eficientes[,2:6])
pairs(eficientes[,2:6])
install.packages("stringr")
library(stringr)
merc <- mtcars %>% filter(str_detect(model,"Merc"))
merc
pairs(merc[,2:6])
cor(merc[,2:6])
cor(newdata)
newdata <- subset(mtcars, select = c(2,7:8,11,12))
cor(newdata)
summary(mtcars)
sd(mtcars$mpg)
mean(mtcars$mpg)
desv_est <- sd(mtcars$mpg)
#Promedio de mtcars MPG
prom <- mean(mtcars$mpg)
coeficiente_variacion <- (dev_est/prom) * 100
coeficiente_variacion
desv_est <- sd(mtcars$mpg)
prom <- mean(mtcars$mpg)
coeficiente_variacion <- (dev_est/prom) * 100
coeficiente_variacion
desv_est <- sd(mtcars$mpg)
#Promedio de mtcars MPG
prom <- mean(mtcars$mpg)
coeficiente_variacion <- (desv_est/prom) * 100
coeficiente_variacion
sd(orangeec$`Internet penetration % population`)
desv <- sd(orangeec$`Internet penetration % population`)
desv
desv_internet <- sd(orangeec$`Internet penetration % population`)
desv_internet
prom_internet <- mean(orangeec$`Internet penetration % population`)
prom_internet
coef_var_internet <- (desv_internet/prom_internet)*100
coef_var_internet
mean(orangeec$`Creat Ind % GDP`)
mean(orangeec$`Creat Ind % GDP`, na.rm = true)
mean(orangeec$`Creat Ind % GDP`, na.rm = TRUE)
mean(orangeec$`Creat Ind % GDP`, na.rm = TRUE)
sd(orangeec$`Creat Ind % GDP`, na.rm = TRUE)
coef_creative_ind <- (desv_creative_ind/prom_creative_ind)*100
coef_creative_ind
prom_creative_ind <- mean(orangeec$`Creat Ind % GDP`, na.rm = TRUE)
desv_creative_ind <-sd(orangeec$`Creat Ind % GDP`, na.rm = TRUE)
coef_creative_ind <- (desv_creative_ind/prom_creative_ind)*100
coef_creative_ind
mtcars <- mtcars %>% mutate(Mas_eficientes=ifelse(mpg<eficientes, 'Bajo promedio', 'En o sobre promedio'))
mtcars <- mtcars %>% mutate(Mas_eficientes=ifelse(mtcars$mpg<eficientes, 'Bajo promedio', 'En o sobre promedio'))
detach("package:dplyr", unload = TRUE)
library(dplyr)
mtcars <- mtcars %>% mutate(Mas_eficientes=ifelse(mtcars$mpg<eficientes, 'Bajo promedio', 'En o sobre promedio'))
install.packages("lubridate")
library(lubridate)
mtcars <- mtcars %>% mutate(Mas_eficientes=ifelse(mtcars$mpg<eficientes, 'Bajo promedio', 'En o sobre promedio'))
mtcars <- mtcars %>%
mutate(Mas_eficientes=ifelse(mpg<eficientes, 'Bajo promedio', 'En o sobre promedio'))
mtcars <- mtcars %>%
mutate(Mas_eficientes=ifelse(mpg<eficientes,
"Bajo promedio", "En o sobre promedio"))
mas_veloces <- mtcars[mtcars$qsec < 16,]
mas_veloces
mtcars <- mtcars %>% mutate(velicidad_cuarto_milla = ifelse(qsec < 16, "Menos de 16 seg", "Más de 16 seg"))
mtcars <- mtcars %>%
mutate(Mas_eficientes=ifelse(mpg<eficientes,
"Bajo promedio", "En o sobre promedio"))
mtcars <- mtcars %>%
mutate(Mas_eficientes=ifelse(mpg<eficientes_prom,
"Bajo promedio", "En o sobre promedio"))
eficientes_prom <- mean(mtcars$mpg)
mtcars <- mtcars %>%
mutate(Mas_eficientes=ifelse(mpg<eficientes_prom,
"Bajo promedio", "En o sobre promedio"))
mtcars <- mtcars %>% mutate(peso_kilos=(wt/2)*1000)
mtcars <- mtcars %>% mutate(categoria_peso = ifelse(peso_kilos <= 1500, "Livianos", "Pesados"))
orangeec <- orangeec %>% mutate(crecimiento_GPD = ifelse(orangeec$`GDP Growth %` >= 2.5, "2.5% o más", "Menos 2.5%"))
mtcars %>% arrange(desc(peso_kilos))
mas_pesados <- mtcars %>% filter(model %in% c("Lincoln", "Chrysler Imperial", "Fleetwood", "450SE"))
mas_pesados
mtcars %>% arrange(desc(peso_kilos))
mtcars %>%  tail(arrange(desc(peso_kilos)))
test_mas_pesados <- mtcars %>%  arrange(desc(peso_kilos))
tail(test_mas_pesados)
mas_pesados <- tail(test_mas_pesados)
mas_pesados
library(plotly)
mas_pesados
ggplot(mas_pesados, aes(x=hp, y=mpg))+
geom_point()+
facet_wrap(~model)
mas_pesados
mtcars %>%  arrange(desc(peso_kilos))
tail(test_mas_pesados)
test_mas_pesados <- mtcars %>%  arrange(desc(peso_kilos))
mas_pesados <- head(test_mas_pesados)
mas_pesados
ggplot(mas_pesados, aes(x=hp, y=mpg))+
geom_point()+
facet_wrap(~model)
ggplot(mtcars, aes(x=cyl, y=mpg, size = categoria_peso))+
geom_point()
install.packages("rmarkdown")
library(rmarkdown)
r
install.packages("knitr")
install.packages("knitr")
library(knitr)
getwd()
setwd("/Users/nicolasnn/Documents/R/Clases")
getwd()
library(knitr)
library(rmarkdown)
